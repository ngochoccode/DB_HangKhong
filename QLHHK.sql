
-- TẠO BẢNG CHUYEN_BAY
CREATE TABLE CHUYEN_BAY (
    MaChuyenBay VARCHAR(10) PRIMARY KEY,
    MaTuyenBay VARCHAR(10) NOT NULL,
    MaMayBay VARCHAR(10) NOT NULL,
    GioCatCanh TIMESTAMP NOT NULL,
    GioHaCanh TIMESTAMP NOT NULL,
    TrangThai NVARCHAR2(20),
    GiaVe NUMBER(10,2) NOT NULL,
    SoGheTrong NUMBER(3) NOT NULL
);
ALTER TABLE CHUYEN_BAY 
ADD 
CONSTRAINT chk_ChuyenBay_TrangThai CHECK (TrangThai IN ('Đang mở', 'Đã đóng', 'Hoãn', 'Hủy'));

-- TẠO BẢNG VE_MAY_BAY
CREATE TABLE VE_MAY_BAY (
    MaVe VARCHAR2(15) PRIMARY KEY,
    MaChuyenBay VARCHAR2(10),
    MaTuyenBay VARCHAR2(10),
    MaKhachHang VARCHAR2(10),
    TongTien NUMBER(10,2) NOT NULL,
    LoaiVe NVARCHAR2(20),
    NgayDatVe TIMESTAMP NOT NULL,
    TrangThaiVe NVARCHAR2(20)
);

ALTER TABLE VE_MAY_BAY 
ADD CONSTRAINT chk_VeMayBay_LoaiVe CHECK (LoaiVe IN ('Vé khung giờ', 'Vé xác định'));

ALTER TABLE VE_MAY_BAY 
ADD CONSTRAINT chk_VeMaybay_TrangThaiVe CHECK (TrangThaiVe IN ('Chưa thanh toán', 'Đã thanh toán', 'Đã hủy'));
-- TẠO BẢNG CT_VEVE

CREATE TABLE CT_VE (
    MaVe VARCHAR2(10),
    HangGhe VARCHAR2(20),
    GiaTien NUMBER(10,2) NOT NULL,
    PhiBoSung NUMBER(10,2) NOT NULL,
    ViTriGhe NVARCHAR2(10) NOT NULL
);

ALTER TABLE CT_VE
ADD CONSTRAINT chk_CTVe_HangGhe CHECK (HangGhe IN ('Economy', 'Premium Economy', 'Business', 'First Class'));

-- TẠO BẢNG KHACH_HANG
CREATE TABLE KHACH_HANG (
    MaKhachHang VARCHAR2(10) PRIMARY KEY,
    HoTen NVARCHAR2(50) NOT NULL,
    CCCD NVARCHAR2(15) UNIQUE,
    NgaySinh DATE NOT NULL,
    GioiTinh CHAR(1),
    QuocTich NVARCHAR2(100) NOT NULL,
    SDT VARCHAR2(15) UNIQUE,
    Email VARCHAR2(100) UNIQUE, 
    LoaiKhachHang NVARCHAR2(20),
    DiemThuong NUMBER(10,2) DEFAULT 0,
    HangThanhVien NVARCHAR2(20),
    ThoiHanTV TIMESTAMP NOT NULL,
    ThoiGianCapNhatDT TIMESTAMP NOT NULL
);

ALTER TABLE KHACH_HANG 
ADD CONSTRAINT chk_KhachHang_GioiTinh CHECK(GioiTinh IN ('M', 'F'));
ALTER TABLE KHACH_HANG 
ADD CONSTRAINT chk_KhachHang_LoaiKhachHang CHECK (LoaiKhachHang IN ('Cá nhân', 'Doanh nghiệp'));
ALTER TABLE KHACH_HANG 
ADD CONSTRAINT chk_KhachHang_HangThanhVien CHECK (HangThanhVien IN ('Thành viên thường', 'Bạc', 'Vàng', 'Kim cương'));


-- TẠO BẢNG THANH_TOAN
CREATE TABLE THANH_TOAN (
    MaThanhToan VARCHAR2(15) PRIMARY KEY,
    MaVe VARCHAR2(15),
    MaKhuyenMai VARCHAR2(10),
    SoTien NUMBER(10, 2) NOT NULL,
    PhuongThuc NVARCHAR2(20),
    ThoiGianTT TIMESTAMP NOT NULL,
    TrangThai NVARCHAR2(20)
);

ALTER TABLE THANH_TOAN 
ADD CONSTRAINT chk_ThanhToan_PhuongThuc CHECK (PhuongThuc IN ('Ví điện tử', 'Chuyển khoản'));
ALTER TABLE THANH_TOAN 
ADD CONSTRAINT chk_ThanhToan_TrangThai CHECK (TrangThai IN ('Thành công', 'Thất bại', 'Đang xử lý'));

-- TẠO BẢNG PHAN_HOI
CREATE TABLE PHAN_HOI (
    MaPhanHoi VARCHAR(15) PRIMARY KEY,
    MaKhachHang VARCHAR(10),
    NoiDung NVARCHAR2(1000) NOT NULL,
    LoaiPhanHoi NVARCHAR2(20),
    TrangThaiXuLy NVARCHAR2(20),
    ThoiGianPhanHoi TIMESTAMP NOT NULL,
    ThoiGianHoiDap TIMESTAMP NOT NULL
);

ALTER TABLE PHAN_HOI
ADD CONSTRAINT chk_PhanHoi_LoaiPhanHoi CHECK (LoaiPhanHoi IN ('Chuyến bay', 'Vé', 'Dịch vụ', 'Khác'));
ALTER TABLE PHAN_HOI
ADD CONSTRAINT chk_PhanHoi_TrangThaiXuLy CHECK (TrangThaiXuLy IN ('Chưa xử lý', 'Đang xử lý', 'Đã phàn hồi'));


-- TẠO BẢNG NHAN_VIEN
CREATE TABLE NHAN_VIEN (
    MaNhanVien VARCHAR2(10) PRIMARY KEY,
    HoTen NVARCHAR2(50) NOT NULL,
    CCCD NVARCHAR2(15) UNIQUE,
    NgaySinh DATE NOT NULL,
    GioiTinh CHAR(1),
    SDT VARCHAR2(15) UNIQUE,
    Email VARCHAR2(100) UNIQUE,
    ChucVu NVARCHAR2(50) NOT NULL,
    LuongCoBan NUMBER(10,2) NOT NULL,
    PhucLoi NVARCHAR2(100),
    NgayVaoLam TIMESTAMP NOT NULL
);


ALTER TABLE NHAN_VIEN
ADD CONSTRAINT chk_NhanVien_GioiTinh CHECK(GioiTinh IN ('M', 'F') );

-- TẠO BẢNG BANG_CAP
CREATE TABLE BANG_CAP (
    MaBangCap VARCHAR2(10) PRIMARY KEY,
    TenBangCap NVARCHAR2(10) NOT NULL,
    MaNhanVien VARCHAR2(10),
    ThoiHan TIMESTAMP NOT NULL,
    TrangThai NVARCHAR2(20) 
);

-- TẠO BẢNG DICH_VU_BO_SUNG
CREATE TABLE DICH_VU_BO_SUNG (
    MaDichVu VARCHAR2(10) PRIMARY KEY,
    TenDichVu NVARCHAR2(50) NOT NULL,
    GiaTien NUMBER(10,2) NOT NULL
);
-- TẠO BẢNG CT_DICH_VU
CREATE TABLE CT_DICH_VU (
		MaVe VARCHAR2(10),
		MaDichVu VARCHAR2(10),
		GhiChu NVARCHAR2(1000) 
);

-- TẠO BẢNG SAN_BAY
CREATE TABLE SAN_BAY (
    MaSanBay VARCHAR2(10) PRIMARY KEY,
    TenSanBay NVARCHAR2(100) NOT NULL,
    TinhThanhPho NVARCHAR2(50) NOT NULL,
    QuocGia NVARCHAR2(50) NOT NULL
);
-- TẠO BẢNG MAY_BAY
CREATE TABLE MAY_BAY (
    MaMayBay VARCHAR(10) PRIMARY KEY,
    LoaiMayBay NVARCHAR2(50) NOT NULL,
    SoGhe NUMBER(3) NOT NULL,
    HangSanXuat NVARCHAR2(50) NOT NULL,
    TrangThai NVARCHAR2(100),
    ViTriHienTai VARCHAR2(10)
);

ALTER TABLE MAY_BAY
ADD CONSTRAINT chk_MayBay_TrangThai CHECK (TrangThai IN ('Đang sử dụng', 'Đang bảo trì', 'Dừng hoạt động'));

-- TẠO BẢNG SO_DO_GHE
CREATE TABLE SO_DO_GHE (
    MaMayBay VARCHAR2(10) PRIMARY KEY,
    ViTriGhe VARCHAR2(10) NOT NULL,
    HangGhe VARCHAR2(20) NOT NULL,
    TrangThaiGhe NVARCHAR2(20) NOT NULL
);

ALTER TABLE SO_DO_GHE
ADD CONSTRAINT chk_SoDoGhe_HangGhe CHECK(HangGhe IN ('Economy', 'Premium Economy', 'Business', 'First Class')) ;

ALTER TABLE SO_DO_GHE
ADD CONSTRAINT chk_SoDoGhe_TrangThaiGhe CHECK(TrangThaiGhe IN ('Trống', 'Đang giữ', 'Đã xác nhận' )) ;
-- TẠO BẢNG TUYEN_BAY

CREATE TABLE TUYEN_BAY (
    MaTuyenBay VARCHAR2(10) PRIMARY KEY,
    SanBayDi VARCHAR2(10),
    SanBayDen VARCHAR2(10),
    KhoangCach NUMBER(6,2) NOT NULL
);

-- TẠO BẢNG LICH_BAO_TRI
CREATE TABLE LICH_BAO_TRI (
    MaBaoTri VARCHAR2(10) PRIMARY KEY,
    MaMayBay VARCHAR2(10),
    NgayBaoTri DATE NOT NULL,
    ChiPhi NUMBER(10,2) NOT NULL,
    GhiChu NVARCHAR2(500) NULL
);
-- TẠO BẢNG LICH_SU_BAY
CREATE TABLE LICH_SU_BAY (
    MaLichSu VARCHAR2(10) PRIMARY KEY,
    MaChuyenBay VARCHAR2(10),
    ThoiGianBatDau TIMESTAMP NOT NULL,
    ThoiGianKetThuc TIMESTAMP NOT NULL,
    KetQua NVARCHAR2(50)
);

ALTER TABLE LICH_SU_BAY
ADD CONSTRAINT chk_LichSuBay_KetQua CHECK (KetQua IN ('Hoàn thành', 'Bị hoãn', 'Bị hủy'));

-- TẠO BẢNG DANH_GIA
CREATE TABLE DANH_GIA (
    MaDanhGia VARCHAR(10) PRIMARY KEY,
    MaKhachHang VARCHAR(10) NOT NULL,
    MaChuyenBay VARCHAR(10) NOT NULL,
    SoSao NUMBER(1) CHECK (SoSao BETWEEN 1 AND 5),
    NhanXet NVARCHAR2(1000)
);

-- TẠO BẢNG KHUYEN_MAI
CREATE TABLE KHUYEN_MAI (
    MaKhuyenMai VARCHAR2(10) PRIMARY KEY,
    TenKhuyenMai NVARCHAR2(100) NOT NULL,
    GiaTri NUMBER(5,2) NOT NULL,
    NgayBatDau DATE NOT NULL,
    NgayKetThuc DATE NOT NULL,
    DieuKienKM NVARCHAR2(100) NOT NULL
);

ALTER TABLE KHUYEN_MAI
ADD CONSTRAINT chk_KhuyenMai_GiaTri CHECK (GiaTri >= 0);
ALTER TABLE KHUYEN_MAI
ADD CONSTRAINT chk_KhuyenMai_NgayBatDau CHECK (NgayBatDau < NgayKetThuc);

-- TẠO BẢNG LAM_THU_TUC_BAY
CREATE TABLE LAM_THU_TUC_BAY (
    MaCheckIn VARCHAR2(10) PRIMARY KEY,
    MaVe VARCHAR2(10),
    ThoiGianCheckIn TIMESTAMP NOT NULL,
    PhuongThucCheckIn NVARCHAR2(20),
    TrangThaiCheckIn NVARCHAR2(20),
    GhiChu NVARCHAR2(500)
);
ALTER TABLE LAM_THU_TUC_BAY
ADD CONSTRAINT chk_LamThuTucBay_PhuongThucCheckIn CHECK (PhuongThucCheckIn IN ('Trực tuyến', 'Trực tiếp'));
ALTER TABLE LAM_THU_TUC_BAY
ADD CONSTRAINT chk_LamThuTucBay_TrangThaiCheckIn CHECK (TrangThaiCheckIn IN ('Hoàn thành', 'Đang xử lý', 'Bị từ chối'));

-- TẠO BẢNG QUAN_LY_HUY_DOI_VE
CREATE TABLE QUAN_LY_HUY_DOI_VE (
    MaYeuCau VARCHAR2(10) PRIMARY KEY,
    MaVe VARCHAR2(10),
    LoaiYeuCau NVARCHAR2(20) NOT NULL,
    ThoiGianYeuCau TIMESTAMP NOT NULL,
    TrangThai NVARCHAR2(20),
    PhiPhat NUMBER(10,2) NULL,
    VeMoi VARCHAR2(10),
    LyDo NVARCHAR2(500) NULL,
    GhiChu NVARCHAR2(500) NULL
);

ALTER TABLE QUAN_LY_HUY_DOI_VE 
ADD CONSTRAINT chk_QLHuyDoiVe_LoaiYeuCau CHECK (LoaiYeuCau IN ('Hủy vé', 'Đổi vé'));
ALTER TABLE QUAN_LY_HUY_DOI_VE 
ADD CONSTRAINT chk_QLHuyDoiVe_TrangThai CHECK (TrangThai IN ('Chờ xử lý', 'Đã chấp nhận', 'Bị từ chối'));

-- TẠO BẢNG PHAN_CONG_BAY
CREATE TABLE PHAN_CONG_BAY(
  MaNhanVien VARCHAR2(10),
  MaChuyenBay VARCHAR2(10),
  TrangThai NVARCHAR2(100),
  VaiTro NVARCHAR2(100) NOT NULL,
  GhiChu NVARCHAR2(1000),
  ThoiGianBatDau TIMESTAMP NOT NULL,
  ThoiGianKetThuc TIMESTAMP NOT NULL,
  CONSTRAINT PK_PHANCONG PRIMARY KEY(MaNhanVien, MaChuyenBay)
);

ALTER TABLE PHAN_CONG_BAY
ADD CONSTRAINT chk_PhanCongBay_TrangThai CHECK (TrangThai IN ('Đã phân công', 'Hoàn thành', 'Hủy'));

-- TẠO BẢNG PHAN_CONG_CA_TRUC
CREATE TABLE PHAN_CONG_CA_TRUC(
  MaNhanVien VARCHAR2(10),
  MaSanBay VARCHAR2(10),
  TrangThai NVARCHAR2(100),
  VaiTro NVARCHAR2(100) NOT NULL,
  ThoiGianBatDau TIMESTAMP NOT NULL,
  ThoiGianKetThuc TIMESTAMP NOT NULL,
  GHICHU NVARCHAR2(1000),
  CONSTRAINT PK_PHANCONGCATRUC PRIMARY KEY(MaNhanVien, MaSanBay)
);

ALTER TABLE PHAN_CONG_CA_TRUC
ADD CONSTRAINT chk_PhanCongCaTruc_TrangThai CHECK (TrangThai IN ('Đã phân công', 'Hoàn thành', 'Hủy'));

-- TẠO BẢNG HANH_LY
CREATE TABLE HANH_LY (
    MaHanhLy VARCHAR2(10) PRIMARY KEY,
    MaKhachHang VARCHAR2(10) NOT NULL,
    MaChuyenBay VARCHAR2(10) NOT NULL,
    TrongLuong NUMBER(5,2),
    LoaiHanhLy NVARCHAR2(100) NOT NULL,
    TrangThai NVARCHAR2(100) NOT NULL,
    ViTriHanhLy NVARCHAR2(100) NOT NULL,
    GhiChu NVARCHAR2(1000)
);

ALTER TABLE HANH_LY
ADD CONSTRAINT chk_HanhLy_TrongLuong CHECK(TrongLuong >= 0);
ALTER TABLE HANH_LY
ADD CONSTRAINT chk_HanhLy_LoaiHanhLy CHECK(LoaiHanhLy IN ('Xách tay', 'Ký gửi'));
ALTER TABLE HANH_LY
ADD CONSTRAINT chk_HanhLy_TrangThai CHECK(TrangThai IN ('Chưa gửi', 'Đả gửi', 'Đang vận chuyển', 'Đã nhận'));

-- Tạo ràng buộc toàn vẹn khóa ngoại

ALTER TABLE CHUYEN_BAY 
ADD CONSTRAINT fk_ChuyenBay_Tuyenbay FOREIGN KEY (MaTuyenBay) REFERENCES TUYEN_BAY (MaTuyenBay)
ON DELETE CASCADE;

ALTER TABLE CHUYEN_BAY 
ADD CONSTRAINT fk_ChuyenBay_MayBay FOREIGN KEY (MaMayBay) REFERENCES MAY_BAY (MaMayBay)
ON DELETE CASCADE;

ALTER TABLE VE_MAY_BAY
ADD CONSTRAINT fk_VeMayBay_ChuyenBay FOREIGN KEY (MaChuyenBay) REFERENCES CHUYEN_BAY(MaChuyenBay)
ON DELETE CASCADE;

ALTER TABLE VE_MAY_BAY
ADD CONSTRAINT fk_VeMayBay_TuyenBay FOREIGN KEY (MaTuyenBay) REFERENCES TUYEN_BAY(MaTuyenBay)
ON DELETE CASCADE;

ALTER TABLE VE_MAY_BAY
ADD CONSTRAINT fk_VeMayBay_KhachHang FOREIGN KEY (MaKhachHang) REFERENCES KHACH_HANG(MaKhachHang)
ON DELETE CASCADE;

ALTER TABLE CT_VE
ADD CONSTRAINT fk_CTVe_VeMayBay FOREIGN KEY (MaVe) REFERENCES VE_MAY_BAY(MaVe)
ON DELETE CASCADE;

ALTER TABLE THANH_TOAN
ADD CONSTRAINT fk_ThanhToan_VeMayBay FOREIGN KEY (MaVe) REFERENCES VE_MAY_BAY(MaVe)
ON DELETE CASCADE;
ALTER TABLE THANH_TOAN
ADD CONSTRAINT fk_ThanhToan_KhuyenMai FOREIGN KEY (MaKhuyenMai) REFERENCES KHUYEN_MAI(MaKhuyenMai)
ON DELETE CASCADE;


ALTER TABLE PHAN_HOI
ADD CONSTRAINT fk_PhanHoi_KhachHang FOREIGN KEY (MaKhachHang) REFERENCES KHACH_HANG(MaKhachHang)
ON DELETE CASCADE;

ALTER TABLE BANG_CAP
ADD CONSTRAINT fk_BangCap_NhanVien FOREIGN KEY (MaNhanVien) REFERENCES NHAN_VIEN(MaNhanVien)
ON DELETE CASCADE;

ALTER TABLE CT_DICH_VU
ADD CONSTRAINT fk_CTDichVu_VeMayBay FOREIGN KEY (MaVe) REFERENCES VE_MAY_BAY(MaVe)
ON DELETE CASCADE;
ALTER TABLE CT_DICH_VU
ADD CONSTRAINT fk_CTDichVu_DichVuBoSung FOREIGN KEY (MaDichVu) REFERENCES DICH_VU_BO_SUNG(MaDichVu)
ON DELETE CASCADE;

ALTER TABLE MAY_BAY
ADD CONSTRAINT fk_MayBay_SanBay FOREIGN KEY (ViTriHienTai) REFERENCES SAN_BAY(MaSanBay)
ON DELETE CASCADE;

ALTER TABLE SO_DO_GHE
ADD CONSTRAINT fk_SoDoGhe_MayBay FOREIGN KEY(MaMayBay) REFERENCES MAY_BAY(MaMayBay)
ON DELETE CASCADE;

ALTER TABLE TUYEN_BAY
ADD CONSTRAINT fk_TuyenBay_SanBayDi FOREIGN KEY (SanBayDi) REFERENCES SAN_BAY(MaSanBay)
ON DELETE CASCADE;
ALTER TABLE TUYEN_BAY
ADD CONSTRAINT fk_TuyenBay_SanBayDen FOREIGN KEY (SanBayDen) REFERENCES SAN_BAY(MaSanBay)
ON DELETE CASCADE;

ALTER TABLE LICH_BAO_TRI
ADD CONSTRAINT fk_LichBaoTri_MayBay FOREIGN KEY (MaMayBay) REFERENCES MAY_BAY(MaMayBay)
ON DELETE CASCADE;

ALTER TABLE LICH_SU_BAY
ADD CONSTRAINT fk_LichSuBay_ChuyenBay FOREIGN KEY(MaChuyenBay) REFERENCES CHUYEN_BAY(MaChuyenBay)
ON DELETE CASCADE;

ALTER TABLE DANH_GIA
ADD CONSTRAINT fk_DanhGia_KhachHang FOREIGN KEY (MaKhachHang) REFERENCES KHACH_HANG(MaKhachHang)
ON DELETE CASCADE;
ALTER TABLE DANH_GIA
ADD CONSTRAINT fk_DanhGia_ChuyenBay FOREIGN KEY (MaChuyenBay) REFERENCES CHUYEN_BAY(MaChuyenBay)
ON DELETE CASCADE;

ALTER TABLE LAM_THU_TUC_BAY
ADD CONSTRAINT fk_LamThuTucBay_VeMayBay FOREIGN KEY (MaVe) REFERENCES VE_MAY_BAY(MaVe)
ON DELETE CASCADE;

ALTER TABLE QUAN_LY_HUY_DOI_VE
ADD CONSTRAINT fk_HuyDoiVe_VeMayBay FOREIGN KEY (MaVe) REFERENCES VE_MAY_BAY(MaVe)
ON DELETE CASCADE;
ALTER TABLE QUAN_LY_HUY_DOI_VE
ADD CONSTRAINT fk_HuyDoiVeMoi_VeMayBay FOREIGN KEY (VeMoi) REFERENCES VE_MAY_BAY(MaVe)
ON DELETE CASCADE;

ALTER TABLE PHAN_CONG_BAY
ADD CONSTRAINT fk_PhanCongBay_NhanVien FOREIGN KEY(MaNhanVien) REFERENCES NHAN_VIEN(MaNhanVien)
ON DELETE CASCADE;


ALTER TABLE PHAN_CONG_CA_TRUC
ADD CONSTRAINT fk_PhanCongCaTruc_NhanVien FOREIGN KEY(MaNhanVien) REFERENCES NHAN_VIEN(MaNhanVien)
ON DELETE CASCADE;
ALTER TABLE PHAN_CONG_CA_TRUC
ADD CONSTRAINT fk_PhanCongCaTruc_ChuyenBay FOREIGN KEY(MaSanBay) REFERENCES SAN_BAY(MaSanBay)
ON DELETE CASCADE;

ALTER TABLE HANH_LY
ADD CONSTRAINT fk_HanhLy_KhachHang FOREIGN KEY(MaKhachHang) REFERENCES KHACH_HANG(MaKhachHang)
ON DELETE CASCADE;
ALTER TABLE HANH_LY
ADD CONSTRAINT FK_HanhLy_ChuyenBay FOREIGN KEY(MaChuyenBay) REFERENCES CHUYEN_BAY(MaChuyenBay)
ON DELETE CASCADE;

-- 1. Tạo bảng USER
CREATE TABLE "USER" (
    USER_ID      NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FULL_NAME    NVARCHAR2(100) NOT NULL,
    EMAIL        VARCHAR2(150) UNIQUE NOT NULL,
    CREATED_AT   DATE DEFAULT SYSDATE,
    UPDATED_AT   DATE DEFAULT SYSDATE,
    IS_DELETED   NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1))
);


-- 2. Tạo bảng ACCOUNT
CREATE TABLE ACCOUNT (
    ACCOUNT_ID    NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID       NUMBER(10) NOT NULL,
    USERNAME      VARCHAR2(50) UNIQUE NOT NULL,
    PASSWORD_HASH VARCHAR2(200) NOT NULL,
    STATUS        VARCHAR2(20) DEFAULT 'ACTIVE',
    CREATED_AT    DATE DEFAULT SYSDATE,
    UPDATED_AT    DATE DEFAULT SYSDATE,
    IS_DELETED    NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT FK_ACCOUNT_USER FOREIGN KEY (USER_ID) REFERENCES "USER"(USER_ID)
);


-- 3. Tạo bảng FUNCTION
CREATE TABLE FUNCTION (
    FUNCTION_ID   NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME_FUNCTION NVARCHAR2(100) NOT NULL,
    CREATED_AT    DATE DEFAULT SYSDATE,
    UPDATED_AT    DATE DEFAULT SYSDATE,
    IS_DELETED    NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1))
);

-- 4. Tạo bảng ROLE
CREATE TABLE ROLE (
    ROLE_ID     NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FUNCTION_ID NUMBER(10) NOT NULL,
    ADD_PERM    NUMBER(1) DEFAULT 0 CHECK (ADD_PERM IN (0,1)),
    EDIT_PERM   NUMBER(1) DEFAULT 0 CHECK (EDIT_PERM IN (0,1)),
    DELETE_PERM NUMBER(1) DEFAULT 0 CHECK (DELETE_PERM IN (0,1)),
    DOWNLOAD_PERM NUMBER(1) DEFAULT 0 CHECK (DOWNLOAD_PERM IN (0,1)),
    VIEW_PERM   NUMBER(1) DEFAULT 0 CHECK (VIEW_PERM IN (0,1)),
    CREATED_AT  DATE DEFAULT SYSDATE,
    UPDATED_AT  DATE DEFAULT SYSDATE,
    IS_DELETED  NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT FK_ROLE_FUNCTION FOREIGN KEY (FUNCTION_ID) REFERENCES FUNCTION(FUNCTION_ID)
);

-- 5. Tạo bảng ROLE_GROUP
CREATE TABLE ROLE_GROUP (
    ROLE_GROUP_ID NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME_ROLE_GROUP VARCHAR2(100) NOT NULL,
    CREATED_AT DATE DEFAULT SYSDATE,
    UPDATED_AT DATE DEFAULT SYSDATE,
    IS_DELETED NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1))
);



-- 6. Tạo bảng ROLE_GROUP_ASSIGN_ROLE
CREATE TABLE ROLE_GROUP_ASSIGN_ROLE (
    ROLE_GROUP_ID NUMBER(10) NOT NULL,
    ROLE_ID       NUMBER(10) NOT NULL,
    CREATED_AT    DATE DEFAULT SYSDATE,
    UPDATED_AT    DATE DEFAULT SYSDATE,
    IS_DELETED    NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT PK_ROLE_GROUP_ASSIGN_ROLE PRIMARY KEY (ROLE_GROUP_ID, ROLE_ID),
    CONSTRAINT FK_ROLE_GROUP FOREIGN KEY (ROLE_GROUP_ID) REFERENCES ROLE_GROUP(ROLE_GROUP_ID),
    CONSTRAINT FK_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID)
);

-- 7. Tạo bảng ACCOUNT_ASSIGN_ROLE_GROUP
CREATE TABLE ACCOUNT_ASSIGN_ROLE_GROUP (
    ACCOUNT_ID    NUMBER(10) NOT NULL,
    ROLE_GROUP_ID NUMBER(10) NOT NULL,
    CREATED_AT    DATE DEFAULT SYSDATE,
    UPDATED_AT    DATE DEFAULT SYSDATE,
    IS_DELETED    NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT PK_ACCOUNT_ASSIGN_ROLE_GROUP PRIMARY KEY (ACCOUNT_ID, ROLE_GROUP_ID),
    CONSTRAINT FK_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID),
    CONSTRAINT FK_ROLE_GROUP_ASSIGN FOREIGN KEY (ROLE_GROUP_ID) REFERENCES ROLE_GROUP(ROLE_GROUP_ID)
);

-- 8. Tạo bảng ACCOUNT_ASSIGN_ROLE
CREATE TABLE ACCOUNT_ASSIGN_ROLE (
    ACCOUNT_ID  NUMBER(10) NOT NULL,
    ROLE_ID     NUMBER(10) NOT NULL,
    CREATED_AT  DATE DEFAULT SYSDATE,
    UPDATED_AT  DATE DEFAULT SYSDATE,
    IS_DELETED  NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT PK_ACCOUNT_ASSIGN_ROLE PRIMARY KEY (ACCOUNT_ID, ROLE_ID),
    CONSTRAINT FK_ACCOUNT_ROLE FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID),
    CONSTRAINT FK_ROLE_ASSIGN FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID)
);

CREATE TABLE ACCOUNT_TOKEN (
    TOKEN_ID      NUMBER(20) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ACCOUNT_ID    NUMBER(10) NOT NULL,
    TOKEN_VALUE   VARCHAR2(500) UNIQUE NOT NULL,
    EXPIRES_AT    DATE NOT NULL,
    ISSUED_AT     DATE DEFAULT SYSDATE,
    IS_REVOKED    CHAR(1) DEFAULT 'N' CHECK (IS_REVOKED IN ('Y', 'N')),
    CONSTRAINT FK_TOKEN_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID)
);


INSERT INTO ROLE_GROUP (NAME_ROLE_GROUP) VALUES('khachhang');
INSERT INTO ROLE_GROUP (NAME_ROLE_GROUP) VALUES('admin');


SELECT * FROM ACCOUNT a;
INSERT INTO ACCOUNT_ASSIGN_ROLE_GROUP(ACCOUNT_ID, ROLE_GROUP_ID) VALUES (1, 1);
INSERT INTO ACCOUNT_ASSIGN_ROLE_GROUP(ACCOUNT_ID, ROLE_GROUP_ID) VALUES (2, 2);

COMMIT;



